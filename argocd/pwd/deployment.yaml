apiVersion: v1
kind: Namespace
metadata:
  name: vaultwarden
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
  namespace: vaultwarden
  labels:
    app: vaultwarden
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      containers:
      - name: vaultwarden
        image: vaultwarden/server:1.27.0
        ports:
        - containerPort: 80
        env:
        - name: ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: pwd-secrets
              key: admin_token
        - name: RUST_BACKTRACE
          value: "1"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: pwd-secrets
              key: db_url
        volumeMounts:
        - mountPath: "/data"
          name: vaultwarden-data
      volumes:
      - name: vaultwarden-data
        persistentVolumeClaim:
          claimName: vaultwarden-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden
  namespace: vaultwarden
  labels:
    app: vaultwarden
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: vaultwarden
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: vaultwarden
  name: vaultwarden-ingress
  annotations:
    # custom max body size for file uploading like backing image uploading
    nginx.ingress.kubernetes.io/proxy-body-size: 10000m
    nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - pwd.int.alex-j-butler.com
    secretName: vaultwarden-tls
  rules:
  - host: pwd.int.alex-j-butler.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: vaultwarden
            port:
              number: 80