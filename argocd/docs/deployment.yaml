apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookstack
  namespace: bookstack
  labels:
    app: bookstack
spec:
  selector:
    matchLabels:
      app: bookstack
  template:
    metadata:
      labels:
        app: bookstack
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: bookstack
      imagePullSecrets:
        - name: githubregcreds
      initContainers:
      - name: init-bookstack-volume
        image: busybox:1.36
        env:
          - name: APP_KEY
            value: "base64:Zl8EgevNRyr1x4n1zmazkGUutR+OvwNTzXAGL5YJOFU="
        command: ['sh', '-c', "echo $APP_KEY > /config/BOOKSTACK_APP_KEY.txt; sleep 2"]
        volumeMounts:
        - mountPath: "/config"
          name: bookstack-temp
      - name: init-bookstack-ca
        image: debian:stable-slim
        command: ["/bin/sh", "-c"]
        # args: ["apk --no-cache add ca-certificates && update-ca-certificates && cp -r /etc/ssl/certs/* /artifact/"]
        args: ["apt update && apt install -y --no-install-recommends ca-certificates && update-ca-certificates && cp -r /etc/ssl/certs/* /artifact/"]
        # args: ["tail -f /dev/null"]
        volumeMounts:
        - name: tmp
          mountPath: /artifact
          readOnly: false
        - name: ca-pemstore
          mountPath: /usr/local/share/ca-certificates/ca-customcert.crt
          subPath: minio-ca.crt
          readOnly: false
      containers:
      - name: bookstack
        #image: linuxserver/bookstack
        image: ghcr.io/alex-j-butler/docker-bookstack/bookstack:v23.02.2
        ports:
        - containerPort: 80
        env:
        - name: PUID
          value: "1001"
        - name: PGID
          value: "986"

        ### Database configuration
        - name: DB_HOST
          value: "mysqlcluster.mysql-cluster.svc.cluster.local"
          #value: "10.102.92.84"
        # Database user
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: bookstack-db-user-pass
              key: username
        # Database password
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: bookstack-db-user-pass
              key: password
        # Database db name
        - name: DB_DATABASE
          value: "bookstack"

        ### Application configuration
        - name: APP_URL
          value: "https://docs.int.alex-j-butler.com"
        - name: APP_DEBUG
          value: "true"
        - name: FILE_UPLOAD_SIZE_LIMIT
          value: "100"
        - name: "SESSION_LIFETIME"
          value: "600"

        ### Session and Cache driver
        - name: CACHE_DRIVER
          value: "redis"
        - name: SESSION_DRIVER
          value: "redis"
        - name: REDIS_SERVERS
          value: "rfs-redisfailover.default.svc.cluster.local:6379:0"
        - name: REDIS_SERVER
          value: "tcp://rfs-redisfailover.default.svc.cluster.local:26379?timeout=0.100"

        ### S3 Storage configuration
        - name: STORAGE_TYPE
          value: "s3"
        - name: STORAGE_S3_KEY
          valueFrom:
            secretKeyRef:
              name: bookstack-s3
              key: S3_KEY
        - name: STORAGE_S3_SECRET
          valueFrom:
            secretKeyRef:
              name: bookstack-s3
              key: S3_SECRET
        - name: STORAGE_S3_BUCKET
          valueFrom:
            secretKeyRef:
              name: bookstack-s3
              key: S3_BUCKET
        - name: STORAGE_S3_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: bookstack-s3
              key: S3_ENDPOINT
        - name: STORAGE_URL
          value: "https://img.int.alex-j-butler.com/bookstack"
        volumeMounts:
        - mountPath: "/config"
          name: bookstack-temp
        - name: tmp
          mountPath: /etc/ssl/certs
          readOnly: false
        # readinessProbe:
        #  httpGet:
        #    path: /login
        #    port: 80
        #  initialDelaySeconds: 5
        #  timeoutSeconds: 1
        #  periodSeconds: 15
        # livenessProbe:
        #  httpGet:
        #    path: /login
        #    port: 80
        #  initialDelaySeconds: 15
        #  timeoutSeconds: 1
        #  periodSeconds: 15
      volumes:
        - name: bookstack-temp
          emptyDir:
            sizeLimit: 500Mi
        - name: tmp
          emptyDir: {}
        - name: ca-pemstore
          configMap:
            name: ca-pemstore
